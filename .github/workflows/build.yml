name: Build and Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build for ${{ matrix.build.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          - { os: linux, arch: amd64, name: Linux AMD64 }
          - { os: linux, arch: arm64, name: Linux ARM64 }
          - { os: darwin, arch: amd64, name: macOS AMD64 }
          - { os: darwin, arch: arm64, name: macOS ARM64 }
          - { os: windows, arch: amd64, name: Windows AMD64 }
          - { os: windows, arch: arm64, name: Windows ARM64 }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
        id: go
      - name: Build for ${{ matrix.build.name }}
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.build.os }} GOARCH=${{ matrix.build.arch }} go build -trimpath -ldflags="-w -s" -o estkme-rlpa-server-${{ matrix.build.os }}-${{ matrix.build.arch }}
      - name: Upload ${{ matrix.build.name }} to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: estkme-rlpa-server-${{ matrix.build.os }}-${{ matrix.build.arch }}
          path: estkme-rlpa-server-${{ matrix.build.os }}-${{ matrix.build.arch }}

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: '*'
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          append_body: true
          files: '*'

  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            damonto/estkme-rlpa-server
            ghcr.io/damonto/estkme-rlpa-server
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
